(in-package :stumpwm)

(set-prefix-key (kbd "KP_Add"))
(setf *STARTUP-MESSAGE* NIL)

(stumpwm:toggle-mode-line (stumpwm:current-screen)
                          (stumpwm:current-head))

;;(define-key *top-map*
;;   (kbd "XF86RFKill")
;;   "eval (set-prefix-key (kbd \"KP_Add\"))")

;;(define-key *top-map*
;;   (kbd "AKEY")
;;   "eval (set-prefix-key (kbd \"Menu\"))")

(defcommand
   jj-toggle-mode-line
   ()
   ()
    "Toggle the mode line."
    (toggle-mode-line (current-screen) (current-head))
)

;; navigation bindings
(define-key
   *root-map*
   (kbd "SPC")
   "windowlist"
)

(define-key
   *top-map*
   (kbd "KP_Insert")
   "windowlist"
)

(define-key
   *root-map*
   (kbd "-")
   "jj-toggle-mode-line"
)

(define-key
   *root-map*
   (kbd "XF86Back")
   "pull-hidden-previous"
)

(define-key
   *root-map*
   (kbd "XF86AudioPrev")
   "pull-hidden-previous"
)

(define-key
   *root-map*
   (kbd "XF86AudioNext")
   "pull-hidden-next"
)

(define-key
   *root-map*
   (kbd "XF86Forward")
   "pull-hidden-next"
)

(define-key
   *root-map*
   (kbd "SunPageUp")
   "pull-hidden-previous"
)

(define-key
   *root-map*
   (kbd "SunPageDown")
   "pull-hidden-next"
)

(define-key
   *top-map*
   (kbd "KP_Page_Up")
   "pull-hidden-next"
)

(define-key
   *top-map*
   (kbd "KP_Page_Down")
   "pull-hidden-previous"
)

(define-key
   *root-map*
   (kbd "S-XF86Back")
   "gprev"
)

(define-key
   *top-map*
   (kbd "KP_Home")
   "gnext"
)

(define-key
   *top-map*
   (kbd "C-KP_Home")
   "gnext-with-window"
)

(define-key
   *top-map*
   (kbd "KP_7")
   "gnext-with-window"
)

(define-key
   *top-map*
   (kbd "KP_End")
   "gprev"
)

(define-key
   *top-map*
   (kbd "C-KP_End")
   "gprev-with-window"
)

(define-key
   *top-map*
   (kbd "KP_1")
   "gprev-with-window"
)

(define-key
   *root-map*
   (kbd "S-XF86Forward")
   "gnext"
)

(define-key
   *root-map*
   (kbd "S-SunPageUp")
   "gprev"
)

(define-key
   *root-map*
   (kbd "S-SunPageDown")
   "gnext"
)

(define-key
   *root-map*
   (kbd "M-XF86Back")
   "gprev-with-window"
)

(define-key
   *root-map*
   (kbd "M-XF86Forward")
   "gnext-with-window"
)

(define-key
   *root-map*
   (kbd "M-SunPageUp")
   "gprev-with-window"
)

(define-key
   *root-map*
   (kbd "M-SunPageDown")
   "gnext-with-window"
)

(define-key
   *root-map*
   (kbd "9")
   "delete"
)

(define-key
   *root-map*
   (kbd "KP_Subtract")
   "delete"
)

(define-key
   *top-map*
   (kbd "KP_Divide")
   "hsplit"
)

(define-key
   *top-map*
   (kbd "KP_Multiply")
   "vsplit"
)

(define-key
   *top-map*
   (kbd "KP_Delete")
   "remove-split"
)

;; window control bindings

(define-key
   *root-map*
   (kbd "C-Up")
   "move-window up"
)

(define-key
   *root-map*
   (kbd "KP_Begin")
   "fullscreen"
)

(define-key
   *top-map*
   (kbd "KP_8")
   "move-window up"
)

(define-key
   *top-map*
   (kbd "C-KP_Up")
   "move-window up"
)

(define-key
   *top-map*
   (kbd "KP_2")
   "move-window down"
)

(define-key
   *top-map*
   (kbd "C-KP_Down")
   "move-window down"
)

(define-key
   *top-map*
   (kbd "KP_6")
   "move-window right"
)

(define-key
   *top-map*
   (kbd "C-KP_Right")
   "move-window right"
)

(define-key
   *top-map*
   (kbd "KP_4")
   "move-window left"
)

(define-key
   *top-map*
   (kbd "C-KP_Left")
   "move-window left"
)

(define-key
   *top-map*
   (kbd "KP_Up")
   "move-focus up"
)

(define-key
   *top-map*
   (kbd "KP_Down")
   "move-focus down"
)

(define-key
   *top-map*
   (kbd "KP_Right")
   "move-focus right"
)

(define-key
   *top-map*
   (kbd "KP_Left")
   "move-focus left"
)

(define-key
   *root-map*
   (kbd "Left")
   "move-focus left"
)

(define-key
   *root-map*
   (kbd "End")
   "restart-hard"
)

(define-key
   *root-map*
   (kbd "quoteleft")
   "gnew"
)

(define-key
   *root-map*
   (kbd "~")
   "gkill"
)

(define-key
   *root-map*
   (kbd "C-Down")
   "move-window down"
)

(define-key
   *root-map*
   (kbd "C-Right")
   "move-window right"
)

(setf *window-border-style*
   :thin)

(setf *input-window-gravity*
   :top-right)

(setf *message-window-gravity*
   :top-left)

;; program shortcuts
(define-key *root-map*
   (kbd "t")
   "exec urxvtc")

(define-key *root-map*
   (kbd "c")
   "exec firefox")

(define-key *root-map*
   (kbd "q")
   "exec firefox")


(define-key *root-map*
   (kbd "M-g")
   "exec gimp")

;; Communication

;; Tools
(define-key *root-map*
   (kbd "@")
   "exec arandr")

(define-key *root-map*
   (kbd "h")
   "exec urxvtc -e htop")

(define-key *root-map*
   (kbd "b")
   "eval (run-shell-command \"acpi\" t)")

(define-key *root-map*
   (kbd "F12")
   "exec import -window root /tmp/screenshot.png")

(define-key *root-map*
   (kbd "F4")
   "exec redshift -x")

(define-key *root-map*
   (kbd "F5")
   "exec redshift -O 2500")

;; Audio stuff
(define-key *root-map*
   (kbd "F9")
   "exec urxvtc -e mocp")

(define-key *root-map*
   (kbd "F10")
   "exec mocp --previous")

(define-key *root-map*
   (kbd "F11")
   "exec mocp --next")

(define-key *root-map*
   (kbd "XF86AudioMute")
   "exec amixer -c 0 set Master toggle")

(define-key *root-map*
   (kbd "XF86AudioLowerVolume")
   "exec urxvtc -e alsamixer")

(define-key *root-map*
   (kbd "XF86AudioRaiseVolume")
   "exec urxvtc -e alsamixer")

(define-key *root-map*
   (kbd "C-RET")
   "move-window down")

(define-key *root-map*
   (kbd "RET")
   "move-focus down")
;;(sb-ext:run-program "picom" '("-b" "--vsync" "--backend" "glx" "--no-fading-openclose" "-D" "3" "-i" "1.0") :search t :wait nil) 
;; do some goodies at startup
(sb-ext:run-program "gentoo-pipewire-launcher" '() :search t :wait nil) 
(run-shell-command "/home/nsensfel/scripts/nsensfel_startup.sh")
